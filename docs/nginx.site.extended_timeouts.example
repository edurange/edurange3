server {
    listen 443 ssl;
    server_name DOMAIN_TO_BE_REPLACED;

    ssl_certificate /etc/letsencrypt/live/DOMAIN_TO_BE_REPLACED/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/DOMAIN_TO_BE_REPLACED/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Extended timeout settings for AI hint generation
    # These settings prevent 504 Gateway Timeout errors during long-running requests
    proxy_read_timeout 600s;       # 10 minutes timeout for reading backend response
    proxy_connect_timeout 60s;     # 1 minute timeout for connecting to backend
    proxy_send_timeout 60s;        # 1 minute timeout for sending request to backend
    
    # Additional timeout settings
    client_body_timeout 60s;       # Timeout for reading client request body
    client_header_timeout 60s;     # Timeout for reading client request headers
    send_timeout 600s;             # Timeout for sending response to client
    
    # Buffer settings to handle large responses
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    location / {
        proxy_pass http://localhost:3663/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket specific settings for Vite
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }

    location /api/ {
        proxy_pass http://localhost:5000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Extended timeouts specifically for API endpoints (hint generation)
        proxy_read_timeout 600s;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;

        # WebSocket settings
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }
    
    # Special endpoint for hint generation with even longer timeout
    location /api/query_slm {
        proxy_pass http://localhost:5000/api/query_slm;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Extended timeouts for AI model inference
        proxy_read_timeout 900s;      # 15 minutes for AI generation
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        
        # Large response buffers for AI responses
        proxy_buffering on;
        proxy_buffer_size 256k;
        proxy_buffers 8 256k;
        proxy_busy_buffers_size 512k;
    }
    
    location /ssh {
        proxy_pass http://localhost:31337;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Get cookies from the initial HTTP handshake req headers,
        # then attach them as custom headers in the forwarded req.
        proxy_set_header X-JWT-Token $cookie_edurange3_jwt;
        proxy_set_header X-CSRF-Token $cookie_X-XSRF-TOKEN;

        # WebSocket settings
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }
    location /chat {
        proxy_pass http://localhost:31338;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Get cookies from the initial HTTP handshake req headers,
        # then attach them as custom headers in the forwarded req.
        proxy_set_header X-JWT-Token $cookie_edurange3_jwt;
        proxy_set_header X-CSRF-Token $cookie_X-XSRF-TOKEN;
        
        # WebSocket settings
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }
}